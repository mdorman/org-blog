;;;; Define tests if ert is loaded
(when (featurep 'ert)
  (ert-deftest ob-test-post-to-wp ()
    "Transfer from buffers to posts and back again"
    (let ((post1-struct '((:blog . "t1b")
                          (:category "t1c1" "t1c2")
                          (:content . "<p>\nTest 1 Content</p>\n")
                          (:date 20738 4432)
                          (:description . "t1e")
                          (:id . "1")
                          (:keywords "t1k1" "t1k2" "t1k3")
                          (:link . "http://example.com/")
                          (:name . "t1n")
                          (:parent . "0")
                          (:status . "publish")
                          (:title . "Test 1 Title")
                          (:type . "post")))
          (post1-wp-input '(("link" . "http://example.com/")
                            ("post_content" . "<p>\nTest 1 Content</p>\n")
                            ("post_date_gmt" :datetime (20738 22432 0 0))
                            ("post_excerpt" . "t1e")
                            ("post_id" . "1")
                            ("post_name" . "t1n")
                            ("post_parent" . "0")
                            ("post_status" . "publish")
                            ("post_title" . "Test 1 Title")
                            ("post_type" . "post")
                            ("terms_names"
                             ("category" "t1c1" "t1c2")
                             ("post_tag" "t1k1" "t1k2" "t1k3")))))
      (should (equal (org-blog-post-to-wp post1-struct) post1-wp-input))))
  (ert-deftest ob-test-wp-to-post ()
    "Transform from a WP response to a post"
    (let ((post1-struct '((:blog . "t1b")
                          (:category "t1c1" "t1c2")
                          (:content . "<p>\nTest 1 Content</p>\n")
                          (:date 20738 4432)
                          (:description . "t1e")
                          (:id . "1")
                          (:keywords "t1k1" "t1k2" "t1k3")
                          (:link . "http://example.com/")
                          (:name . "t1n")
                          (:parent . "0")
                          (:status . "publish")
                          (:title . "Test 1 Title")
                          (:type . "post")))
          (post1-wp-output '(("post_id" . "1")
                             ("post_title" . "Test 1 Title")
                             ("post_date" :datetime
                              (20738 4432))
                             ("post_date_gmt" :datetime
                              (20738 4432))
                             ("post_modified" :datetime
                              (20738 4432))
                             ("post_modified_gmt" :datetime
                              (20738 4432))
                             ("post_status" . "publish")
                             ("post_type" . "post")
                             ("post_name" . "t1n")
                             ("post_author" . "3075621")
                             ("post_password")
                             ("post_excerpt" . "t1e")
                             ("post_content" . "<p>\nTest 1 Content</p>\n")
                             ("post_parent" . "0")
                             ("post_mime_type")
                             ("link" . "http://example.com/")
                             ("guid" . "http://example.com/")
                             ("menu_order" . 0)
                             ("comment_status" . "closed")
                             ("ping_status" . "open")
                             ("sticky")
                             ("post_thumbnail")
                             ("post_format" . "standard")
                             ("terms"
                              (("term_id" . "126039325")
                               ("name" . "t1c1")
                               ("slug" . "t1c1")
                               ("term_group" . "0")
                               ("term_taxonomy_id" . "4")
                               ("taxonomy" . "category")
                               ("description")
                               ("parent" . "0")
                               ("count" . 0))
                              (("term_id" . "126039469")
                               ("name" . "t1c2")
                               ("slug" . "t1c2")
                               ("term_group" . "0")
                               ("term_taxonomy_id" . "5")
                               ("taxonomy" . "category")
                               ("description")
                               ("parent" . "0")
                               ("count" . 0))
                              (("term_id" . "147991082")
                               ("name" . "t1k1")
                               ("slug" . "t1k1")
                               ("term_group" . "0")
                               ("term_taxonomy_id" . "6")
                               ("taxonomy" . "post_tag")
                               ("description")
                               ("parent" . "0")
                               ("count" . 0))
                              (("term_id" . "147991085")
                               ("name" . "t1k2")
                               ("slug" . "t1k2")
                               ("term_group" . "0")
                               ("term_taxonomy_id" . "7")
                               ("taxonomy" . "post_tag")
                               ("description")
                               ("parent" . "0")
                               ("count" . 0))
                              (("term_id" . "147991087")
                               ("name" . "t1k3")
                               ("slug" . "t1k3")
                               ("term_group" . "0")
                               ("term_taxonomy_id" . "8")
                               ("taxonomy" . "post_tag")
                               ("description")
                               ("parent" . "0")
                               ("count" . 0)))
                             ("custom_fields"))))
      ;; FIXME: we should actually be looking up :blog in the alist
      (should (equal (cons (cons :blog "t1b") (org-blog-wp-to-post post1-wp-output)) post1-struct))))

  (ert-deftest ob-test-wp-params ()
    "Test getting the blog-id (and correct xmlrpc URL) via xmlrpc"
    (let ((initial-blog-param `((:xmlrpc . "https://wordpress.com/xmlrpc.php")
                                (:username . "mdorman@ironicdesign.com")
                                (:password . ,org-blog-test-password)))
          (final-blog-param `((:blog-id . "46183217")
                              (:engine . "wp")
                              (:password . ,org-blog-test-password)
                              (:username . "mdorman@ironicdesign.com")
                              (:xmlrpc . "https://orgblogtest.wordpress.com/xmlrpc.php"))))
      (should (equal (org-blog-wp-params initial-blog-param) final-blog-param)))))
